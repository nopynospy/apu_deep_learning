# -*- coding: utf-8 -*-
"""Copy of LAB1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AN5pfXxdnu_zqUhJzRMhodh63XUzYwN1

# First LAB for DL-JUN2021

# LAB1

## Introducing Program Environment through an example

Ref: https://www.youtube.com/watch?v=inN8seMm7UI&feature=youtu.be

https://www.analyticsvidhya.com/blog/2020/03/google-colab-machine-learning-deep-learning/

# Section 1

## Example
"""

import pandas as pd
import seaborn as sns
import numpy as np
from sklearn.model_selection import train_test_split

ds = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data')
ds.head()

cols = ['sepal_length', ' sepal_width', 'petal_length', 'petal_width', 'class']
df = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data', names=cols)
df.head()

df.describe()

sns.pairplot(df, hue='class')

sns.heatmap(df.corr(), annot=True)

"""lambda function in python:
http://www.u.arizona.edu/~erdmann/mse350/topics/list_comprehensions.html

"""

df['class_encod'] = df['class'].apply(lambda x: 0 if x == 'Iris-setosa' else 1 if x == 'Iris-versicolor' else 2)
df['class_encod'].unique()

df

y = df[['class_encod']] # target attributes 
X = df.iloc[:, 0:4] # input attributes
X.head()

y

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,
                                                    random_state=0, stratify=y)

np.shape(y_train)

y_train.shape

from sklearn.neighbors import KNeighborsClassifier

m= KNeighborsClassifier()

m = KNeighborsClassifier()
m.fit(X_train, np.ravel(y_train))

# Predict for first 10 rows in X-test
m.predict(X_test.iloc[0:10])

m.score(X_test, y_test)

from sklearn.metrics import confusion_matrix
confusion_matrix(y_test, m.predict(X_test))

"""# Section 2

## Loading Internal Data from Keras
"""

# Initialize tensorflow and keras
# import tensorflow as tf
import keras

(train_x, train_y), (test_x, test_y) = keras.datasets.boston_housing.load_data()

"""## Importing data from google drive

### Mounting google drive

#### Mount by clicking on the folder symbol on the left of this window 

#### 
or run the following code
"""

# Commented out IPython magic to ensure Python compatibility.
try:
    from google.colab import drive
    drive.mount('/content/drive', force_remount=True)
    COLAB = True
    print("Note: using Google CoLab")
#     %tensorflow_version 2.x
except:
    print("Note: not using Google CoLab")
    COLAB = False

# after you finish your experimentation you may run the following to unmount.
# OR Automatically unmounted when colab is closed

# To unmount
# from google.colab import drive 
# drive.flush_and_unmount()

# get path to the file you wish to load
path = '/content/drive/MyDrive/Colab Notebooks/Data/online shop_train.csv'

import pandas as pd
ds = pd.read_csv(path)

ds.head()